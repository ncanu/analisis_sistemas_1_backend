apply plugin: 'java'
apply plugin: 'war'

war
{
    archiveName = 'Application.war'
}

repositories
{
    mavenCentral()
}

dependencies
{
    // Java Core
    providedCompile 'javax:javaee-api:7.0'
    providedCompile 'javax.ws.rs:javax.ws.rs-api:2.0.1'
    providedCompile 'javax.enterprise:cdi-api:2.0-EDR1'
    providedCompile 'javax.transaction:transaction-api:1.1-rev-1'

    //Jersey Framework
    providedCompile 'org.glassfish.jersey.core:jersey-server:2.23'
    providedCompile 'org.glassfish.jersey.ext:jersey-bean-validation:2.23'
    providedCompile 'org.glassfish.jersey.media:jersey-media-multipart:2.23'
    providedCompile 'org.glassfish.jersey.media:jersey-media-json-jackson:2.23'
    providedCompile 'org.glassfish.jersey.containers:jersey-container-servlet:2.23'

    //Database
    compile 'mysql:mysql-connector-java:5.1.6'
    compile 'org.eclipse.persistence:eclipselink:2.6.0'

    //CSV
    compile "com.fasterxml.jackson.dataformat:jackson-dataformat-csv:2.5.4"

    //Encrypt
    compile 'org.mindrot:jbcrypt:0.3m'

    //JWT Token
    compile 'io.jsonwebtoken:jjwt:0.6.0'

    //lombok
    compile "org.projectlombok:lombok:1.16.8"
}

task ('deploy', dependsOn: 'war', type:Exec)
{
        workingDir "${serverHome}${File.separator}bin"

        if (System.properties['os.name'].toLowerCase().contains('windows'))
        {
                commandLine 'cmd', '/c', 'asadmin.bat'
        }
        else
        {
               commandLine "./asadmin"
        }

               args "deploy", "--force=true", "--virtualservers=server", "${war.archivePath}"
}

